{"ast":null,"code":"var _jsxFileName = \"/Users/jsmith/Development/code/phase-2/phase-2-project/src/components/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [test, setTest] = useState(\"\");\n  console.log();\n  function handleEntry(e) {\n    e.preventDefault();\n    console.lo;\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this);\n}\n_s(Test, \"avy2LUCHX73XQOf2YL7005uX0zs=\");\n_c = Test;\nexport default Test;\n\n// Create a controlled form that has a text input, \n\n// button that says click me and a counter that starts at 0. \n// Every time you hit submit when there is text in the \n// input box the counter should increment by the length of the string in \n// the input field and then the input field should reset.\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test","_s","test","setTest","console","log","handleEntry","e","preventDefault","lo","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jsmith/Development/code/phase-2/phase-2-project/src/components/Test.js"],"sourcesContent":["import React, {useState} from \"react\"\n\nfunction Test () {\n\n    const [test, setTest] = useState(\"\")\n    console.log()\n\n    function handleEntry(e){\n        e.preventDefault()\n        console.lo\n    }\n\n    return (\n       <form >\n            <input \n                type=\"text\"\n                onChange={handleEntry}\n            />\n        </form>\n    )\n}\n\nexport default Test\n\n// Create a controlled form that has a text input, \n\n\n \n// button that says click me and a counter that starts at 0. \n// Every time you hit submit when there is text in the \n// input box the counter should increment by the length of the string in \n// the input field and then the input field should reset."],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,IAAIA,CAAA,EAAI;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpCO,OAAO,CAACC,GAAG,CAAC,CAAC;EAEb,SAASC,WAAWA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACK,EAAE;EACd;EAEA,oBACGV,OAAA;IAAAW,QAAA,eACKX,OAAA;MACIY,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACf,EAAA,CAlBQD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAoBb,eAAeA,IAAI;;AAEnB;;AAIA;AACA;AACA;AACA;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}